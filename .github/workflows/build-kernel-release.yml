name: Build and Release OnePlus 13 Kernel

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false

jobs:
  get_manager:
    uses: ./.github/workflows/get-manager.yml
    secrets: inherit

  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - model: OP13
            soc: sun
            branch: oneplus/sm8750
            manifest: oneplus_13.xml
            android_version: android15
            kernel_version: "6.6"
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      model: ${{ matrix.model }}
      soc: ${{ matrix.soc }}
      branch: ${{ matrix.branch }}
      manifest: ${{ matrix.manifest }}
      android_version: ${{ matrix.android_version }}
      kernel_version: ${{ matrix.kernel_version }}

  trigger-release:
    needs:
      - get_manager
      - build
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      RELEASE_NAME: "OnePlus 13 Kernel With SukiSU Ultra & SUSFS"
      RELEASE_NOTES: |
        This release contains both the latest available SukiSU Ultra and SUSFS!

        Modified Kernel Flasher:
        -> https://github.com/fatalcoder524/KernelFlasher

        KSU Manager:
        -> https://github.com/SukiSU-Ultra/SukiSU-Ultra

        SUSFS Module:
        -> https://github.com/sidex15/ksu_module_susfs

        BBR Optimizer Module:
        -> https://github.com/fatalcoder524/TCP_Optimiser_Module

        Mountify Module:
        -> https://github.com/backslashxx/mountify

        Unlimited Hotspot Module:
        -> https://github.com/felikcat/unlimited-hotspot

        Features:
        [+] SukiSU Ultra ☯
        [+] SUSFS ඞ
        [+] Optimized for Magic Mount usage | Shamiko isn't needed anymore!
        [+] Google BBR Support | Use [this](https://github.com/fatalcoder524/TCP_Optimiser_Module) to enable
        [+] Maphide LineageOS Detections
        [+] Futile Maphide for jit-zygote-cache Detections
        [+] Mountify Support
        [+] Unlimited Hotspot Support
        [+] Forced ECN (Explicit Congestion Notification) for all connections by default
        [+] Use LZ4 compression algorithm for ZRAM and Hybernation by default if available
        [+] Some minor optimizations

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Generate and Create New Tag
        run: |
            LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
            if [ -z "$LATEST_TAG" ]; then
              LATEST_TAG="v1.5.9-r0"
            fi
            NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
            echo "New tag: $NEW_TAG"
            echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
            git tag $NEW_TAG
            git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: false
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Upload Release Assets Dynamically
        run: |
          for file in ./downloaded-artifacts/kernel-*/*; do
            if [ -d "$file" ]; then
                continue
            fi
            echo "Uploading $file..."
            gh release upload ${{ env.NEW_TAG }} "$file"
          done

          for file in ./downloaded-artifacts/manager/*; do
            if [ -d "$file" ]; then
                continue
            fi
            echo "Uploading $file..."
            gh release upload ${{ env.NEW_TAG }} "$file"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*
